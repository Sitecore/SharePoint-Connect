<configuration xmlns:x="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <sharepoint>
      <!-- This section contains predefined configurations for SharePoint sites. -->
      <servers>
        <!-- Each server entity provides configuration for one SharePoint site 
             use the following parameters:
             "url" to provide url to the SharePoint site;

             "username" to provide username that will be used to connect to SharePoint  (e.g. "admin", "Sharepoint\admin");
             "password" to provide password that will be used to connect to SharePoint;
                        Credentials are optional. If not specified credentials of the currently logged in user will be used.

             "connectionConfiguration" to define connection configuration that will be used to connect to the SharePoint.
                                       Available connection configurations are specified under sitecore/sharepoint/connectionConfigurations node.
                                       It is optional. If not specified 'Default' connection configuration will be used.             

             "context" to define when the configuration may be used. Posssible values:
                       "Provider" - the configuration will be used only for ItemProvider;
                       "Webcontrol" - the configuration will be used to retrieve information for webcontrols;
                       "Any" - the configuration may be used for both ItemProvider and to render webcontrols;
             Example:
               <server url="https://SharePointURL" username="user" password="password" connectionConfiguration="Default" context="Any"/>
        -->
      </servers>

      
      <!-- 
        This section contains all available connection configurations for SharePoint sites. 
        Connection configuration defines configuration of a connection to the SharePoint site (e.g. user authentication type).
        Use the following parameters:
        "displayName" to define a name that will be shown in the Integration Wizard.
      -->
      <connectionConfigurations>
        <!--Configuration for connection to SharePoint on-premises solutions that utilize Windows authentication methods.-->
        <Default displayName="Windows authentication" type="Sitecore.Sharepoint.Data.WebServices.ConnectionConfigurations.ClassicConnectionConfiguration, Sitecore.Sharepoint.Data.WebServices" singleInstance="true" />

        <!--Configuration for connection to SharePoint Online solutions-->
        <SharePointOnline displayName="SharePoint Online authentication" type="Sitecore.Sharepoint.Data.WebServices.ConnectionConfigurations.ClaimsBasedConnectionConfiguration, Sitecore.Sharepoint.Data.WebServices" singleInstance="true">
          <!--Implements user authentication to SharePoint Online solutions-->
          <param desc="Claims-based workflow" type="Sitecore.Sharepoint.Common.Authentication.Workflows.SharePointOnlineWorkflow, Sitecore.Sharepoint.Common"/>
        </SharePointOnline>
      </connectionConfigurations>

      <!--
          This sections contains definitions that are used to create appropriate list objects based on information retrieved from SharePoint
      -->
      <listTypeDefinitions>
        <listTypeDefinition ServerTemplate="101" type="Sitecore.Sharepoint.ObjectModel.Entities.Lists.Library, Sitecore.Sharepoint.ObjectModel" />
        <listTypeDefinition ServerTemplate="104" type="Sitecore.Sharepoint.ObjectModel.Entities.Lists.AnnouncementList, Sitecore.Sharepoint.ObjectModel" />
        <listTypeDefinition ServerTemplate="106" type="Sitecore.Sharepoint.ObjectModel.Entities.Lists.EventList, Sitecore.Sharepoint.ObjectModel" />
        <listTypeDefinition ServerTemplate="107" type="Sitecore.Sharepoint.ObjectModel.Entities.Lists.TaskList, Sitecore.Sharepoint.ObjectModel" />
        <listTypeDefinition type="Sitecore.Sharepoint.ObjectModel.Entities.Lists.BaseList, Sitecore.Sharepoint.ObjectModel" />
      </listTypeDefinitions>

      <!--
          This sections contains definitions that are used to create appropriate list objects based on information retrieved from SharePoint
      -->
      <itemTypeDefinitions>
        <itemTypeDefinition FSObjType="1" type="Sitecore.Sharepoint.ObjectModel.Entities.Items.FolderItem, Sitecore.Sharepoint.ObjectModel" />
        <itemTypeDefinition DocIcon="doc|xls|docx|xlsx" type="Sitecore.Sharepoint.ObjectModel.Entities.Items.OfficeDocumentItem, Sitecore.Sharepoint.ObjectModel" />
        <itemTypeDefinition ContentTypeId="0x0102" type="Sitecore.Sharepoint.ObjectModel.Entities.Items.EventItem, Sitecore.Sharepoint.ObjectModel" />
        <itemTypeDefinition ContentTypeId="0x0104" type="Sitecore.Sharepoint.ObjectModel.Entities.Items.AnnouncementItem, Sitecore.Sharepoint.ObjectModel" />
        <itemTypeDefinition ContentTypeId="0x0108" type="Sitecore.Sharepoint.ObjectModel.Entities.Items.TaskItem, Sitecore.Sharepoint.ObjectModel" />
        <itemTypeDefinition ContentTypeId="0x0101" type="Sitecore.Sharepoint.ObjectModel.Entities.Items.DocumentItem, Sitecore.Sharepoint.ObjectModel" />
        <itemTypeDefinition type="Sitecore.Sharepoint.ObjectModel.Entities.Items.BaseItem, Sitecore.Sharepoint.ObjectModel" />
      </itemTypeDefinitions>
    </sharepoint>
    <settings>
      <setting name="ItemNameValidation">
        <x:attribute name="value">^(?=.{1,100}$)[\w\*\$][\w\s\$\-\.]*(\(\d{1,}\)){0,1}$</x:attribute>
      </setting>

      <!-- 
           Default SharePoint server for UI controls. 
           It will be used if the source SharePoint server is not specified for aUI control.
      -->
      <setting name="Sharepoint.DefaultServer" value="http://SharePointDefaultURL" />

      <!--
           Initialization vector that is used during crypting/decrypting user password stored in Integration item
      -->
      <setting name="Sharepoint.InitializationVector" value="FR+kDoetP5UbWjo9ZvgfVw==" />

      <!--
           Maximum number of items retrieved from SharePoint
      -->
      <setting name="Sharepoint.ItemRetrievingLimit" value="100" />

      <!-- Cookies cache size
             Determines the size of the authentication cookies cache.
             Specify the value in bytes or append the value with KB, MB or GB
             A value of 0 (zero) disables the cache.
        -->
      <setting name="Sharepoint.Caching.CookiesCache" value="2MB" />

      <!--
          Collection of required fileds.
            Determines fileds which are always requested from a SharePoint server.
            Union of these fields and view field are requested from the server.
      -->
      <setting name="Sharepoint.RequiredFields" value="GUID|FileRef|FileDirRef|FileLeafRef|ID|MetaInfo|ContentTypeId|Title|CheckoutUser|BaseName|FSObjType|DocIcon|Modified" />

      <!--  Integration instance
            Assigns the instance name of dedicated Sitecore installation for integration operations.
            When empty, all integration operations are performed on the local installation of Sitecore.
            Default vaue: (empty)
      -->
      <setting name="Sharepoint.IntegrationInstance" value="" />
    </settings>
    <ui>
      <references>
        <reference id="Sharepoint">/bin/Sitecore.Sharepoint.Web.dll</reference>
      </references>
    </ui>

    <processors>
      <uiDeleteItems>
        <processor mode="on" type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.Helpers.HistoryProviderIDTable, Sitecore.Sharepoint.Data.Providers" method="PrepareToDelete" x:before="processor[@method='Execute']"/>
        <processor mode="on" type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.Helpers.HistoryProviderIDTable, Sitecore.Sharepoint.Data.Providers" method="ProcessDelete" x:after="processor[@method='Execute']"/>
      </uiDeleteItems>
    </processors>

    <pipelines>
      <publishItem>
        <processor mode="on" type="Sitecore.Sharepoint.Data.Providers.Pipelines.DisableSharepointProvider, Sitecore.Sharepoint.Data.Providers" method="Disable" x:before="processor[@type='Sitecore.Publishing.Pipelines.PublishItem.RaiseProcessingEvent, Sitecore.Kernel']" />
        <processor mode="on" type="Sitecore.Sharepoint.Data.Providers.Pipelines.DisableSharepointProvider, Sitecore.Sharepoint.Data.Providers" method="Clear" x:after="processor[@type='Sitecore.Publishing.Pipelines.PublishItem.UpdateStatistics, Sitecore.Kernel']" />
      </publishItem>
    </pipelines>

    <SharepointListsProvider type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.Helpers.SharepointListsProvider, Sitecore.Sharepoint.Data.Providers" singleInstance="true"/>
    <SyncActionFactory type="Sitecore.Sharepoint.Data.Providers.SyncActions.SyncActionFactory, Sitecore.Sharepoint.Data.Providers" singleInstance="true"/>
    <HistoryProvider type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.Helpers.HistoryProviderIDTable, Sitecore.Sharepoint.Data.Providers" singleInstance="true"/>
    <SitecoreEventManager type="Sitecore.Sharepoint.Common.Wrappers.SitecoreEventManager, Sitecore.Sharepoint.Common" singleInstance="true"/>
    <AzureEnvironment type="Sitecore.Sharepoint.Data.Providers.Azure.AzureEnvironment, Sitecore.Sharepoint.Data.Providers" singleInstance="true"/>
    <SharepointContextProvider type="Sitecore.Sharepoint.Data.Providers.SpContextProvider, Sitecore.Sharepoint.Data.Providers" singleInstance="true"/>

    <pipelines>

      <group name="itemProvider" groupName="itemProvider">
        <pipelines>
          <getChildren>
            <processor type="Sitecore.Sharepoint.Pipelines.GetChildren.GetChildren, Sitecore.Sharepoint.Data.Providers" x:after="processor[position()=last()]"/>
          </getChildren>
          <getItem>
            <processor type="Sitecore.Sharepoint.Pipelines.GetItem.GetItem, Sitecore.Sharepoint.Data.Providers" x:after="processor[position()=last()]"/>
          </getItem>
        </pipelines>
      </group>
      
      <synchronizeTree>
        <processor type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.UpdateExpirationInterval, Sitecore.Sharepoint.Data.Providers"/>
        <processor type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.IsActiveTree, Sitecore.Sharepoint.Data.Providers"/>
        <processor type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.IsIntegrationInstance, Sitecore.Sharepoint.Data.Providers">
          <param ref="SitecoreEventManager"/>
          <!-- 
              Uncomment the following param ref before deploying in Azure 
          -->
          <!--<param ref="AzureEnvironment"/>-->
        </processor>
        <processor type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.GetSitecoreItemList, Sitecore.Sharepoint.Data.Providers"/>
        <processor type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.GetSharepointItemList, Sitecore.Sharepoint.Data.Providers">
          <param ref="SharepointListsProvider"/>
          <param ref="SharepointContextProvider"/>
        </processor>
        <processor type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.Helpers.HistoryProviderIDTable, Sitecore.Sharepoint.Data.Providers" method="Init"/>
        <processor type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.MergeLists, Sitecore.Sharepoint.Data.Providers">
          <param ref="SyncActionFactory"/>
          <param ref="HistoryProvider"/>
        </processor>
        <processor type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.ExecuteActions, Sitecore.Sharepoint.Data.Providers"/>
        <processor type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.Helpers.HistoryProviderIDTable, Sitecore.Sharepoint.Data.Providers" method="Refresh"/>
      </synchronizeTree>

      <!--
         This pipeline runs if a new item is found in SharePoint list
      -->
      <createIntegrationItem>
        <processor type="Sitecore.Sharepoint.Pipelines.CreateIntegrationItem.GetTemplate, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.CreateIntegrationItem.CreateItem, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessIntegrationItem.UpdateFields, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessIntegrationItem.UpdateBlob, Sitecore.Sharepoint.Data.Providers" />
      </createIntegrationItem>
      
      <!--
         This pipeline runs to update Sitecore item based on SharePoint information
      -->
      <updateIntegrationItem>
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessIntegrationItem.GetItem, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessIntegrationItem.IsLocked, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessIntegrationItem.UpdateFields, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessIntegrationItem.UpdateBlob, Sitecore.Sharepoint.Data.Providers" />
      </updateIntegrationItem>

      <!--
         This pipeline runs if SharePoint item is deleted
      -->
      <deleteIntegrationItem>
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessIntegrationItem.GetItem, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessIntegrationItem.IsLocked, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.DeleteIntegrationItem.DeleteItem, Sitecore.Sharepoint.Data.Providers" />
      </deleteIntegrationItem>
      
      <!--
         This pipeline runs when Sitecore item is created under Integration item
      -->
      <createSharepointItem>
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessSharepointItem.IsBidirectionalLink, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.CreateSharepointItem.ResolveExtension, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.CreateSharepointItem.CreateItem, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.UpdateSharepointItem.ResetIntegrationItem, Sitecore.Sharepoint.Data.Providers" />
      </createSharepointItem>
      
      
      <!--
         This pipeline runs if children of Integration item is saved 
      -->
      <updateSharepointItem>
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessSharepointItem.IsBidirectionalLink, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessSharepointItem.GetItem, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessSharepointItem.IsCheckedOut, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessSharepointItem.InvalidateSourceItem, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.UpdateSharepointItem.UpdateItem, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.UpdateSharepointItem.ResetIntegrationItem, Sitecore.Sharepoint.Data.Providers" />
      </updateSharepointItem>
      
      <!--
         This pipeline runs is children of Integration item is deleted
      -->
      <deleteSharepointItem>
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessSharepointItem.IsBidirectionalLink, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessSharepointItem.GetItem, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.ProcessSharepointItem.IsCheckedOut, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.DeleteSharepointItem.DeleteItem, Sitecore.Sharepoint.Data.Providers" />
      </deleteSharepointItem>
      
      
      <!--
         This pipeline convert data from SharePoint format to Sitecore one
      -->
      <translateSharepointValue>
        <processor type="Sitecore.Sharepoint.Pipelines.TranslateSharepointValue.CopySourceValue, Sitecore.Sharepoint.Data.Providers" />
        <processor type="Sitecore.Sharepoint.Pipelines.TranslateSharepointValue.TranslateDateToIsoDate, Sitecore.Sharepoint.Data.Providers" />
      </translateSharepointValue>

      <!--
         This pipeline convert data from Sitecore format to SharePoint one
      -->
      <translateIntegrationValue>
        <processor type="Sitecore.Sharepoint.Pipelines.TranslateIntegrationValue.CopySourceValue, Sitecore.Sharepoint.Data.Providers" />
      </translateIntegrationValue>
    </pipelines>

    <commands>
      <command name="sharepoint:runintegrationwizard" type="Sitecore.Sharepoint.Web.Shell.Applications.IntegrationWizard.Commands.RunIntegrationWizard,Sitecore.Sharepoint.Web"/>
    </commands>
    
    <events>
      <event name="item:saved">
        <handler type="Sitecore.Sharepoint.Pipelines.SynchronizeTree.Helpers.HistoryProviderIDTable, Sitecore.Sharepoint.Data.Providers" method="OnItemSaved" />
        <handler type="Sitecore.Sharepoint.Data.Providers.IntegrationConfig.IntegrationConfigDataProvider, Sitecore.Sharepoint.Data.Providers" method="OnItemSaved" />
      </event>

      <event name="item:saved:remote">
        <handler type="Sitecore.Sharepoint.Data.Providers.IntegrationConfig.IntegrationConfigDataProvider, Sitecore.Sharepoint.Data.Providers" method="OnItemSavedRemote" />
      </event>
    </events>
  </sitecore>
</configuration>