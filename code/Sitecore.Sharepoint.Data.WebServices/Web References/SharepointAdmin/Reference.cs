//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Sitecore.Sharepoint.Data.WebServices.SharepointAdmin {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdminSoap", Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class Admin : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshConfigCacheOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Admin() {
            this.Url = global::Sitecore.Sharepoint.Data.WebServices.Properties.Settings.Default.Sitecore_Sharepoint_Data_WebServices_SharepointAdmin_Admin;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateSiteCompletedEventHandler CreateSiteCompleted;
        
        /// <remarks/>
        public event DeleteSiteCompletedEventHandler DeleteSiteCompleted;
        
        /// <remarks/>
        public event GetLanguagesCompletedEventHandler GetLanguagesCompleted;
        
        /// <remarks/>
        public event RefreshConfigCacheCompletedEventHandler RefreshConfigCacheCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/CreateSite", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateSite(string Url, string Title, string Description, int Lcid, string WebTemplate, string OwnerLogin, string OwnerName, string OwnerEmail, string PortalUrl, string PortalName) {
            object[] results = this.Invoke("CreateSite", new object[] {
                        Url,
                        Title,
                        Description,
                        Lcid,
                        WebTemplate,
                        OwnerLogin,
                        OwnerName,
                        OwnerEmail,
                        PortalUrl,
                        PortalName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSiteAsync(string Url, string Title, string Description, int Lcid, string WebTemplate, string OwnerLogin, string OwnerName, string OwnerEmail, string PortalUrl, string PortalName) {
            this.CreateSiteAsync(Url, Title, Description, Lcid, WebTemplate, OwnerLogin, OwnerName, OwnerEmail, PortalUrl, PortalName, null);
        }
        
        /// <remarks/>
        public void CreateSiteAsync(string Url, string Title, string Description, int Lcid, string WebTemplate, string OwnerLogin, string OwnerName, string OwnerEmail, string PortalUrl, string PortalName, object userState) {
            if ((this.CreateSiteOperationCompleted == null)) {
                this.CreateSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSiteOperationCompleted);
            }
            this.InvokeAsync("CreateSite", new object[] {
                        Url,
                        Title,
                        Description,
                        Lcid,
                        WebTemplate,
                        OwnerLogin,
                        OwnerName,
                        OwnerEmail,
                        PortalUrl,
                        PortalName}, this.CreateSiteOperationCompleted, userState);
        }
        
        private void OnCreateSiteOperationCompleted(object arg) {
            if ((this.CreateSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSiteCompleted(this, new CreateSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteSite", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSite(string Url) {
            this.Invoke("DeleteSite", new object[] {
                        Url});
        }
        
        /// <remarks/>
        public void DeleteSiteAsync(string Url) {
            this.DeleteSiteAsync(Url, null);
        }
        
        /// <remarks/>
        public void DeleteSiteAsync(string Url, object userState) {
            if ((this.DeleteSiteOperationCompleted == null)) {
                this.DeleteSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSiteOperationCompleted);
            }
            this.InvokeAsync("DeleteSite", new object[] {
                        Url}, this.DeleteSiteOperationCompleted, userState);
        }
        
        private void OnDeleteSiteOperationCompleted(object arg) {
            if ((this.DeleteSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetLanguages", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLanguages() {
            object[] results = this.Invoke("GetLanguages", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLanguagesAsync() {
            this.GetLanguagesAsync(null);
        }
        
        /// <remarks/>
        public void GetLanguagesAsync(object userState) {
            if ((this.GetLanguagesOperationCompleted == null)) {
                this.GetLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLanguagesOperationCompleted);
            }
            this.InvokeAsync("GetLanguages", new object[0], this.GetLanguagesOperationCompleted, userState);
        }
        
        private void OnGetLanguagesOperationCompleted(object arg) {
            if ((this.GetLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLanguagesCompleted(this, new GetLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RefreshConfigCache", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RefreshConfigCache(System.Guid VirtualServerId, bool AdminGroupChanged) {
            this.Invoke("RefreshConfigCache", new object[] {
                        VirtualServerId,
                        AdminGroupChanged});
        }
        
        /// <remarks/>
        public void RefreshConfigCacheAsync(System.Guid VirtualServerId, bool AdminGroupChanged) {
            this.RefreshConfigCacheAsync(VirtualServerId, AdminGroupChanged, null);
        }
        
        /// <remarks/>
        public void RefreshConfigCacheAsync(System.Guid VirtualServerId, bool AdminGroupChanged, object userState) {
            if ((this.RefreshConfigCacheOperationCompleted == null)) {
                this.RefreshConfigCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshConfigCacheOperationCompleted);
            }
            this.InvokeAsync("RefreshConfigCache", new object[] {
                        VirtualServerId,
                        AdminGroupChanged}, this.RefreshConfigCacheOperationCompleted, userState);
        }
        
        private void OnRefreshConfigCacheOperationCompleted(object arg) {
            if ((this.RefreshConfigCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshConfigCacheCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateSiteCompletedEventHandler(object sender, CreateSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteSiteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLanguagesCompletedEventHandler(object sender, GetLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RefreshConfigCacheCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591